{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Motivation\n",
    "Before we begin downloading datasets and exploring them, we want to share the motivation behind this project. Throughout our master's graduate program, we had worked on clean and well formatted datasets that have code books and documentation. We created a few variables and then we are able to run some regressions. However, when we embarked on our thesis projects, depending on our questions, we had to find publicly available datasets and put the data together. This project attempts to show how one could go about finding, cleaning and setting up an analytical dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Public Use Files\n",
    "\n",
    "There are many sources of publicly available data. Here is a list of them\n",
    "\n",
    "- https://data.detroitmi.gov/\n",
    "- https://opendata.cityofnewyork.us/\n",
    "- https://www.data.gov/\n",
    "- https://www.google.com/publicdata/directory\n",
    "- https://data.gov.sg/\n",
    "- https://www.ebrd.com/cs/Satellite?c=Content&cid=1395236498263&d=Mobile&pagename=EBRD%2FContent%2FContentLayout\n",
    "- http://erf.org.eg/\n",
    "- https://www.cdc.gov/nchs/index.htm\n",
    "- https://capstat.nyc/\n",
    "- https://atlasdata.dartmouth.edu/\n",
    "\n",
    "For even more public datasets, see https://github.com/cambridgegis/awesome-public-datasets"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this exercise, we will use the NYPD's Motor Vehicle Collisions data, which can be found on https://opendata.cityofnewyork.us/."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Stata's `import` command allows for several types of data. There are other user written commands that allow you to read in other types of data. For example:\n",
    "- `insheetjson`\n",
    "- `libjson`\n",
    "- `spshape2dta`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import delimited \"https://data.cityofnewyork.us/api/views/h9gi-nx95/rows.csv?accessType=DOWNLOAD\", clear"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use Stata's global macros to view some information like dates and times by invoking `$S_DATE` and `$S_TIME`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "display \"$S_DATE $S_TIME\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can include a note in the dataset that we save. This can be used to hold information about the dataset that we are don't want/unable to store in the dataset filename. Here we create a time stamp note."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "notes: \"Downloaded $S_DATE $S_TIME\"\n",
    "notes list"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Relative file paths allow us to move from one folder (current directory) to another easily. Right now, the current directory is in the dofiles folder. We use `..\\` to move up one level to the folder \"Stata Class\" and then down one level into \"input_data\" to save the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\jerem\\Documents\\Stata Class\\dofiles\n"
     ]
    }
   ],
   "source": [
    "cd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "save \"..\\input_data\\NYPD_Motor_Vehicle_Collisions.dta\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Stata",
   "language": "stata",
   "name": "stata"
  },
  "language_info": {
   "codemirror_mode": "stata",
   "file_extension": ".do",
   "mimetype": "text/x-stata",
   "name": "stata",
   "version": "15.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
